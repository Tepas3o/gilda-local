blueprint:
  name: Gilda Deferred Load Request Automation
  description: Implements a deferred load appliance operation, mainly for a LG washing machine and its remote play feature.
  domain: automation
  author: Marcelo Matus

  input:
    deferred_load_section:
      name: Deferred Load Section
      description: Deferred Load Parameters
      input:
        load:
          name: Load
          description: Deferred expected load
          default: 1000.0
          selector:
            number:
              min: 0
              max: 10000
              unit_of_measurement: "W"
              mode: box

        time_horizon:
          name: Time Horizon
          description: Time Horizon to turn-on the deferred load
          default:
            hours: 24
          selector:
            duration:

        sample_frequency:
          name: Sample Frequency
          description: Sample Frequency to program the deferred load
          default:
            minutes: 15
          selector:
            duration:

        co2_cost:
          name: Emission Cost
          description: Emission Cost
          default: 10.0
          selector:
            number:
              min: 0
              max: 1000
              step: any
              unit_of_measurement: "$/Kg CO2"
              mode: box

        kwh_cost:
          name: Energy Cost
          description: Energy Cost
          default: 150.0
          selector:
            number:
              min: 0
              max: 1000
              step: any
              unit_of_measurement: "$/KWh"
              mode: box

        co2_intensity_entity:
          name: CO2 Intensity Sensor
          default: sensor.electricity_maps_co2_intensity
          selector:
            entity:
              filter:
                - domain: sensor

    timer_entity_section:
      name: Timer Entity
      description: Timer to defer the load starting
      input:
        timer_entity:
          name: Deferred Timer
          description: This timer is used to trigger the deferred start
          default: timer.gilda_remote_start_timer
          selector:
            entity:
              filter:
                - domain: timer

    entity_sensors_section:
      name: Entity Sensors
      description: Allow to monitor and control the entity
      input:
        start_sensor:
          name: Deferred Start Sensor
          description: This sensor detects a deferred start request
          default: binary_sensor.lavadora_de_carga_frontal_remote_start
          selector:
            entity:
              filter:
                - domain: binary_sensor

        initial_time_sensor:
          name: Deferred on-period Sensor
          description: Detects how long the entity is expected to be on
          default: sensor.lavadora_de_carga_frontal_initial_time
          selector:
            entity:
              filter:
                - domain: sensor

        wakeup_switch:
          name: Wakeup switch
          description: This switch will wakeup the entity
          default: switch.lavadora_de_carga_frontal_power
          selector:
            entity:
              filter:
                - domain: switch

        start_button:
          name: Deferred Start Button
          description: This button actually start the deferred load
          default: button.lavadora_de_carga_frontal_remote_start
          selector:
            entity:
              filter:
                - domain: button

    gilda_section:
      name: Gilda Section
      description: Gilda connection parameters
      input:
        gilda_host:
          name: Gilda Host
          default: homeassistant.local
        gilda_local_port:
          name: Gilda Opts Port
          default: 5024
          selector:
            number:
              min: 0
              max: 64000
              mode: box

        gilda_opts_port:
          name: Gilda Opts Port
          default: 5012
          selector:
            number:
              min: 0
              max: 64000
              mode: box

    sql_section:
      name: SQL Section
      description: SQL database connection parameters
      input:
        sql_user:
          name: SQL User
          default: homeassistant
        sql_password:
          name: SQL Password
        sql_host:
          name: SQL Host
          default: homeassistant.local
        sql_database:
          name: SQL Database
          default: homeassistant
        sql_port:
          name: SQL Port
          default: 3306
          selector:
            number:
              min: 0
              max: 64000
              mode: box


variables:
  load: !input load
  co2_cost: !input co2_cost
  kwh_cost: !input kwh_cost
  initial_time_sensor: !input initial_time_sensor

trigger_variables:
  th: !input time_horizon
  time_horizon: "{{ (th.hours if 'hours' in th.keys() else '0') ~ ':' ~ (th.minutes if 'minutes' in th.keys() else '00') ~ ':00' }}"
  sf: !input sample_frequency
  sample_frequency: "{{ (sf.hours if 'hours' in sf.keys() else '0') ~ ':' ~ (sf.minutes if 'minutes' in sf.keys() else '00') ~ ':00' }}"

trigger:
  - platform: state
    entity_id:
      - !input start_sensor
      - input_boolean.dummy_remote_on
    to: "on"
    id: deferred_start
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: !input timer_entity
    id: timer_finished

action:
  - choose:
      - conditions:
          - condition: trigger
            id: deferred_start
        sequence:
          - action: "pyscript.gilda_deferred_load_request"
            data:
              load: "{{ load | float / 1000.0}}"
              on_period: "{{ states(initial_time_sensor) }}"
              time_horizon: "{{ time_horizon }}"
              sample_frequency: "{{ sample_frequency }}"
              co2_cost: "{{ co2_cost | float }}"
              kwh_cost: "{{ kwh_cost | float }}"
              co2_intensity_entity: !input co2_intensity_entity

              timer_entity: !input timer_entity

              gilda_host: !input gilda_host
              gilda_opts_port: !input gilda_opts_port
              gilda_local_port: !input gilda_local_port

              sql_user: !input sql_user
              sql_password: !input sql_password
              sql_host: !input sql_host
              sql_database: !input sql_database
              sql_port: !input sql_port

      - conditions:
          - condition: trigger
            id: timer_finished
        sequence:
          - action: switch.turn_on
            target:
              entity_id: !input wakeup_switch
          - delay: "0:00:15"
          - action: button.press
            target:
              entity_id: !input start_button

mode: single
